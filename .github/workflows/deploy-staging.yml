name: Deploy staging
run-name: 'Deploy staging'

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  deployments: write
  pull-requests: write

concurrency:
  group: deploy-staging-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-code-checks:
    name: '🔍 Run code quality checks'
    uses: nightstem/nightstem-web/.github/workflows/run-code-checks.yml@main
    secrets: inherit

  build-and-deploy:
    name: '🚀 Build and deploy to staging'
    environment: staging
    needs: run-code-checks
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build project
        uses: nightstem/nightstem-web/.github/actions/build-project@main
        env:
          NEXT_PUBLIC_FEATURE_FLAG_HOST: ${{ vars.NEXT_PUBLIC_FEATURE_FLAG_HOST }}
          NEXT_PUBLIC_FEATURE_FLAG_CLIENT_KEY: ${{ vars.NEXT_PUBLIC_FEATURE_FLAG_CLIENT_KEY }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Cloudflare Pages
        id: deploy
        uses: nightstem/nightstem-web/.github/actions/deploy-cloudflare@main
        with:
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          project-name: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          build-output-directory: ${{ secrets.BUILD_OUTPUT_DIRECTORY }}
          environment: preview

      - name: Print deployment URL
        run: |
          echo "🌐 URL: ${{ steps.deploy.outputs.deployment-url }}"
          echo "🔗 Alias: ${{ steps.deploy.outputs.deployment-alias }}"

      - name: Add link to job summary
        run: |
          {
            echo "## 🚀 Staging deployment";
            echo "";
            echo "- **URL:** ${{ steps.deploy.outputs.deployment-url }}";
            echo "- **Alias:** ${{ steps.deploy.outputs.deployment-alias }}";
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Comment deployment link on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const body = [
              '### 🚀 Staging deployment',
              '',
              `**URL:** ${'${{ steps.deploy.outputs.deployment-url }}'}`,
              `**Alias:** ${'${{ steps.deploy.outputs.deployment-alias }}'}`
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });

      - name: Create GitHub Deployment
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;

            // Create a deployment for the SHA
            const deployment = await github.rest.repos.createDeployment({
              owner,
              repo,
              ref: context.sha,
              environment: 'staging',
              auto_merge: false,
              required_contexts: [],       // don't block on checks
              transient_environment: true, // it's not prod
              production_environment: false,
              description: 'Nightstem staging deployment'
            });

            // Attach the Pages URL to the deployment status
            const url = `${'${{ steps.deploy.outputs.deployment-alias || steps.deploy.outputs.deployment-url }}'}`;
            await github.rest.repos.createDeploymentStatus({
              owner,
              repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: url,
              log_url: `https://github.com/${owner}/${repo}/actions/runs/${process.env.GITHUB_RUN_ID}`,
              description: 'Staging is live'
            });
