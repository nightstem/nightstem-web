name: Deploy staging
run-name: 'Deploy staging for PR #${{ github.event.pull_request.number }}'

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read
  deployments: write
  pull-requests: write

concurrency:
  group: deploy-staging-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-code-checks:
    name: 'üîç Run code quality checks'
    uses: nightstem/nightstem-web/.github/workflows/run-code-checks.yml@main
    secrets: inherit

  build-and-deploy:
    name: 'üöÄ Build and deploy to staging'
    environment: staging
    needs: run-code-checks
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build project
        uses: nightstem/nightstem-web/.github/actions/build-project@main
        env:
          NEXT_PUBLIC_FEATURE_FLAG_HOST: ${{ vars.NEXT_PUBLIC_FEATURE_FLAG_HOST }}
          NEXT_PUBLIC_FEATURE_FLAG_CLIENT_KEY: ${{ vars.NEXT_PUBLIC_FEATURE_FLAG_CLIENT_KEY }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Cloudflare Pages
        id: deploy
        uses: nightstem/nightstem-web/.github/actions/deploy-cloudflare@main
        with:
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          project-name: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          build-output-directory: ${{ secrets.BUILD_OUTPUT_DIRECTORY }}
          environment: preview

      - name: Comment staging URL on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.deployment-url }}';
            const body = `üöÄ **Staging deployment ready!**

            üìã **Preview URL:** ${deploymentUrl}

            üí° This staging environment will be automatically updated when you push new commits to this PR.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
