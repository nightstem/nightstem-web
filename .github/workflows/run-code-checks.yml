name: Run code checks

on:
  workflow_call:

permissions:
  contents: read

concurrency:
  group: run-code-checks-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Install dependencies once and cache for all subsequent jobs
  setup:
    name: '⚙️ Setup dependencies'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: nightstem/nightstem-web/.github/actions/install-dependencies@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # Run all code quality checks in parallel after dependencies are ready
  code-quality:
    name: '${{ matrix.check }} check'
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        check: [prettier, linter, tests, coverage]
        include:
          - check: prettier
            emoji: '💅'
            description: 'Code formatting'
          - check: linter
            emoji: '🔍'
            description: 'Code linting'
          - check: tests
            emoji: '🧪'
            description: 'Unit tests'
          - check: coverage
            emoji: '📊'
            description: 'Test coverage'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check prettier
        if: matrix.check == 'prettier'
        uses: nightstem/nightstem-web/.github/actions/check-prettier@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check linter
        if: matrix.check == 'linter'
        uses: nightstem/nightstem-web/.github/actions/check-linter@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        if: matrix.check == 'tests'
        uses: nightstem/nightstem-web/.github/actions/run-tests@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check coverage
        if: matrix.check == 'coverage'
        uses: nightstem/nightstem-web/.github/actions/check-coverage@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
